<script lang="ts">
  import { onMount, setContext } from 'svelte';
  import type { ActionHash, AppAgentClient } from '@holochain/client';
  import { AppAgentWebsocket } from '@holochain/client';
{{#if holo_enabled}}
  import WebSdk from '@holo-host/web-sdk'
{{/if}}
  import '@material/mwc-circular-progress';

  import { clientContext } from './contexts';

  let client: AppAgentClient | undefined;

  let loading = true; 

{{#if holo_enabled}}
  const IS_HOLO = ['true', '1', 't'].includes(import.meta.env.VITE_APP_IS_HOLO?.toLowerCase())

  const logout = async () => {
    await (client as WebSdk).signOut();
    (client as WebSdk).signIn({ cancellable: false })
  }
{{/if}}

  onMount(async () => {
  {{#if holo_enabled}}
    if (IS_HOLO) {        
      client = await WebSdk.connect({
        chaperoneUrl: import.meta.env.VITE_APP_CHAPERONE_URL,
        authFormCustomization: {
          appName: '{{app_name}}',
        }
      });

    (client as WebSdk).on('agent-state', agent_state => {
      loading = !agent_state.isAvailable || agent_state.isAnonymous
    });
    
    (client as WebSdk).signUp({ cancellable: false });

    } else {
      client = await AppAgentWebsocket.connect('{{app_name}}');

      loading = false;
    }
  {{else}}
    client = await AppAgentWebsocket.connect('{{app_name}}');

    loading = false;
  {{/if}}
  });

  setContext(clientContext, {
    getClient: () => client,
  });
</script>

<main>
  {#if loading}
    <div style="display: flex; flex: 1; align-items: center; justify-content: center">
      <mwc-circular-progress indeterminate />
    </div>
  {:else}
    <div id="content" style="display: flex; flex-direction: column; flex: 1;">
        <h2>Welcome to Your App!</h2>
        <p>Below are the next steps to integrate the components generated by the scaffolding tool into your app:</p>
        <ol>
          <li>Locate the UI components in the <code>ui/src/DNA/ZOME</code> folders that were generated using commands like <code>hc scaffold entry-type</code>, <code>hc scaffold collection</code>, and <code>hc scaffold link-type</code>.</li>
          <li>Import these components into your <code>holochain-app.ts</code> file</li>
          <li>Replace the placeholder content in the <code>&lt;div id="content"&gt;</code> with the components you imported.</li>
        </ol>
    </div>
  {{#if holo_enabled}}
    {#if IS_HOLO}
      <mwc-button
        style="margin-top: 16px"
        raised
        label="Logout"
        on:click={() => logout()}
      />
    {/if}
  {{/if}}
  {/if}
</main>

<style>
  main {
    text-align: center;
    padding: 1em;
    max-width: 240px;
    margin: 0 auto;
  }

  @media (min-width: 640px) {
    main {
      max-width: none;
    }
  }
</style>
